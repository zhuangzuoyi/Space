<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>哈拎</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http:://halin.xyz/"/>
  <updated>2019-05-24T17:46:09.846Z</updated>
  <id>http:://halin.xyz/</id>
  
  <author>
    <name>哈拎</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>表情包世界读卡器</title>
    <link href="http:://halin.xyz/bqbsjduq/"/>
    <id>http:://halin.xyz/bqbsjduq/</id>
    <published>2019-05-24T14:59:43.000Z</published>
    <updated>2019-05-24T17:46:09.846Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1"><a href="#1" class="headerlink" title="1"></a>1</h1><p>&nbsp;&nbsp;有一类表情包很流行，（这里应该有配图，不过，怕侵权，没了解过这些表情包图片能不能用在个人文章中）这类表情包都会有这么一个格式的文字：滴，XXX卡，有一天，突然想到，可以做个类似的东西玩玩。<br>&nbsp;&nbsp;硬件方面，语音模块首先想到的是<a href="https://baike.baidu.com/item/TTS/3512737" target="_blank" rel="noopener">TTS</a>模块，这类模块应该是很成熟，某宝上很多，使用起来也很简单，直接把想播放的语音的文字通过串口发送到这里模块就行了。<br>&nbsp;&nbsp;后来想起来手上有一块ESP32Lyrat音频开发板，也许可以用，就不用再买TTS模块（舍不得钱），看了下乐鑫提供的<a href="https://github.com/espressif/esp-adf" target="_blank" rel="noopener">音频开发框架（adf）</a>中有播放mp3的例程，只要做出相应语言的mp3文件就行了，<br>&nbsp;&nbsp;因为我用过阿里云，知道阿里云有提供tts服务，实验了下，可以用阿里云的tts服务来生成mp3文件。<br>&nbsp;&nbsp;读卡模块，首先想到的是手上有的RC522模块，手上的RC522模块是spi接口的，不过，esp32 lytea板子可用的IO太少了，最后选用了可以用串口通讯的PN532模块，<br>总体思路是程序中先保存几个卡片的UID，然后把PN532读取卡片的UID跟已近保存到程序中的UID比较，如果读取到的卡片的UID存在程序中的UID则返回一个参数，然后根据这个参数播放不同的mp3文件。原理上很简单。</p><h1 id="2，硬件"><a href="#2，硬件" class="headerlink" title="2，硬件"></a>2，硬件</h1><ul><li><p>读卡模块：PN532 NFC 模块<br><img src="http://halin.oss-cn-shanghai.aliyuncs.com/bqbsjduq/PN532.jpg" alt="image"></p></li><li><p>ESP32开发板：ESP32-LyraT 4.2<br><img src="http://halin.oss-cn-shanghai.aliyuncs.com/bqbsjduq/lyrat.jpg" alt="image"></p></li></ul><h1 id="3、开发环境-windown7"><a href="#3、开发环境-windown7" class="headerlink" title="3、开发环境:windown7"></a>3、开发环境:windown7</h1><ol><li><p>编译器<br>参考：<a href="https://docs.espressif.com/projects/esp-idf/zh_CN/stable/get-started/windows-setup.html" target="_blank" rel="noopener">https://docs.espressif.com/projects/esp-idf/zh_CN/stable/get-started/windows-setup.html</a></p><p> 下载esp32_win32_msys2_environment_and_toolchain，解压即可，</p></li><li>SDK<br>下载音频开发框架（adf）:参考：<a href="https://github.com/espressif/esp-adf" target="_blank" rel="noopener">https://github.com/espressif/esp-adf</a><blockquote><p>git clone –recursive <a href="https://github.com/espressif/esp-adf.git" target="_blank" rel="noopener">https://github.com/espressif/esp-adf.git</a></p></blockquote></li></ol><h1 id="4、使用adf中的工程"><a href="#4、使用adf中的工程" class="headerlink" title="4、使用adf中的工程"></a>4、使用adf中的工程</h1><p>这里使用esp-adf/examples/player/pipeline_sdcard_mp3工程,打开编译工具，进入到该目录，输入命令<strong>make menuconfig</strong>进行配置，这里主要配置如下几项：</p><p>1、选择相应的板子的型号，我这里是ESP32-LyraT 4.2，配置入下：<br><img src="http://halin.oss-cn-shanghai.aliyuncs.com/bqbsjduq/board.PNG" alt></p><p>2、然后设置串口、Flash参数，如下图：<br><img src="http://halin.oss-cn-shanghai.aliyuncs.com/bqbsjduq/port.PNG" alt></p><p>配置完之后，使用命令<strong>make flash</strong>进行烧录，默认的工程是播放SD卡中的<strong>test.mp3</strong>文件，把有<strong>test.mp3</strong>文件的SD卡插入板子上的SD卡卡座，重新开机，就可以播放音乐了</p><h1 id="5、使用阿里云TTS服务生成MP3文件"><a href="#5、使用阿里云TTS服务生成MP3文件" class="headerlink" title="5、使用阿里云TTS服务生成MP3文件"></a>5、使用阿里云TTS服务生成MP3文件</h1><p>1、TTS在阿里云里面，是<a href="https://ai.aliyun.com/nls" target="_blank" rel="noopener">智能语音交互</a>中的<a href="https://ai.aliyun.com/nls/tts?spm=5176.12061031.1228726.4.44883cb4tPtjyl" target="_blank" rel="noopener">语音合成</a>的功能，里面的描述是：语音合成服务，通过先进的深度学习技术，将文本转换成自然流畅的语音。文本转换成语音就是TTS。要使用该服务，首先需要个阿里云账号，然后开通该服务并创建一个项目，完成后，在控制台中可以找到<strong>AccessToken</strong>跟项目<strong>Appkey</strong>。如下图，这两个参数在生成mp3文件时需要用到。</p><p><img src="http://halin.oss-cn-shanghai.aliyuncs.com/bqbsjduq/aliyun_tts.png" alt></p><p>2、阿里云提供的语音合成的RESTful API 有两个（详情查看<a href="https://help.aliyun.com/document_detail/94737.html?spm=a2c4g.11186623.6.593.68b25275DRasFX" target="_blank" rel="noopener">文档</a>）,我使用了其中的get方法，该方法的url格式为：</p><blockquote><p><a href="https://nls-gateway.cn-shanghai.aliyuncs.com/stream/v1/tts?appkey=${您的appkey}&amp;token=${您的token}&amp;text=${想要合成的文本}&amp;format=mp3&amp;sample_rate=16000" target="_blank" rel="noopener">https://nls-gateway.cn-shanghai.aliyuncs.com/stream/v1/tts?appkey=${您的appkey}&amp;token=${您的token}&amp;text=${想要合成的文本}&amp;format=mp3&amp;sample_rate=16000</a></p></blockquote><p>把上面的${您的appkey}、${您的token}、${想要合成的文本}替换成你的就可以了，我一开始使用用chrome一个http调试插件来生成文件的，后来发现了个更简单的方法，就是直接用浏览器打开该URL，然后可以播放该音频，如果满足效果的话，另存为即可，既可以验证也可以下载，一举两得。</p><h1 id="6、PN532驱动"><a href="#6、PN532驱动" class="headerlink" title="6、PN532驱动"></a>6、PN532驱动</h1><p>由于这里只需要读取卡片的UID，所以只需用到PN532两个命令（不包括唤醒命令）：<br>1.设置卡片为读卡器模式，并且是读14443的卡（因为我手上的是M1卡）</p><blockquote><p>0x00,0xff,0x03,0xfd,0xd4,0x14,0x01,0x17,x00</p></blockquote><ol start="2"><li>然后是寻卡指令，可以获得卡片的UID<blockquote><p>0x00,0xff,0x04,0xfc,0xd4,0x4a,0x02,0x00,0xe0,0x00</p></blockquote></li></ol><h1 id="7、"><a href="#7、" class="headerlink" title="7、"></a>7、</h1><p>整个做下了也还是很简单的，自己写的代码主要是PN532的驱动，播放音频部分乐鑫已近做了只要拿来用就行，全部代码及音频文件都在<a href="https://github.com/zhuangzuoyi/Embedded-coding/tree/master/esp32/meme_reader" target="_blank" rel="noopener">meme_reader</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1&quot;&gt;&lt;a href=&quot;#1&quot; class=&quot;headerlink&quot; title=&quot;1&quot;&gt;&lt;/a&gt;1&lt;/h1&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;有一类表情包很流行，（这里应该有配图，不过，怕侵权，没了解过这些表情包图片能不能用在个人文章中）这类表情包都会有这么一个格式
      
    
    </summary>
    
      <category term="ESP32 NFC" scheme="http:://halin.xyz/categories/ESP32-NFC/"/>
    
    
      <category term="ESP32" scheme="http:://halin.xyz/tags/ESP32/"/>
    
  </entry>
  
  <entry>
    <title>显示电脑中的串口及串口详细信息</title>
    <link href="http:://halin.xyz/%E6%98%BE%E7%A4%BA%E4%B8%B2%E5%8F%A3/"/>
    <id>http:://halin.xyz/显示串口/</id>
    <published>2019-05-20T14:48:22.000Z</published>
    <updated>2019-05-20T15:15:30.472Z</updated>
    
    <content type="html"><![CDATA[<p>一个简单的不能再简单工具，把头文件包含进去也才14行代码，如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QCoreApplication&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"QtSerialPort/QSerialPortInfo"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"QtDebug"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">QCoreApplication <span class="title">a</span><span class="params">(argc, argv)</span></span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">auto</span> infos = QSerialPortInfo::availablePorts();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> QSerialPortInfo &amp;info : infos) &#123;</span><br><span class="line">        QString menu_temp = info.portName() + <span class="string">" : "</span> + info.description();</span><br><span class="line">        qDebug() &lt;&lt; menu_temp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个程序只能在命令行中打开，是用来显示电脑中串口的详细信息，因为工作学习中经常要使用到串口，几乎每次使用要打开设备管理器查看用的是哪个串口，有时候打开会很慢，要等上几秒钟，还有使用设备管理器查看串口设备需要如下步骤：<br>1、打开计算机管理<br>2、选择设备管理器<br>3、从众多硬件中找到串口</p><p>很浪费时间，于是，我就想着写了这个软件，把该软件的目录添加到环境变量，就可以在命令行中打开，如下，win 7  cmd中：</p><p><img src="http://halin.oss-cn-shanghai.aliyuncs.com/QT/showserial/cmd.png" alt="cmd"></p><p>还有在VScode中的执行结果如下；</p><p><img src="http://halin.oss-cn-shanghai.aliyuncs.com/QT/showserial/vscode.png" alt="vscode"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一个简单的不能再简单工具，把头文件包含进去也才14行代码，如下&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span c
      
    
    </summary>
    
      <category term="QT" scheme="http:://halin.xyz/categories/QT/"/>
    
    
      <category term="QT" scheme="http:://halin.xyz/tags/QT/"/>
    
  </entry>
  
  <entry>
    <title>重新开始使用hexo</title>
    <link href="http:://halin.xyz/hello-world/"/>
    <id>http:://halin.xyz/hello-world/</id>
    <published>2019-04-20T09:41:03.887Z</published>
    <updated>2019-05-19T09:14:42.988Z</updated>
    
    <content type="html"><![CDATA[<p>很久之前就尝试过用hexo来搭建博客，不过由于当时懂的还太少（github、web等），没有弄出来，后来为了学前端，尝试了一点一点的把博客敲出来（除了博客内容还有html、CSS等），随着web方面的入门，还有我做的博客中web方面的知识也就那些，再继续这样做下去的话，就是在浪费时间，所以，又决定使用hexo来搭建博客。</p><p>由于没有时间把之前的博客迁移过来，只好在这里列出来，博客首页是：<a href="http://zhuangzuoyi.github.io/blog" target="_blank" rel="noopener">http://zhuangzuoyi.github.io/blog</a><br>1、<a href="http://zhuangzuoyi.github.io/blog/article/esp8266/esp8266_user_define_smartconfig/esp8266_user_define_smartconfig.html" target="_blank" rel="noopener">自定义ESP8266 SmartConfig</a><br>2、<a href="http://zhuangzuoyi.github.io/blog/article/python/bookmarks/bookmarts.html" target="_blank" rel="noopener">Chrome bookmarts to web</a><br>3、<a href="http://zhuangzuoyi.github.io/blog/article/project/BT05_IOT/bt05_iot.html" target="_blank" rel="noopener">BT05 IOT</a><br>4、<a href="http://zhuangzuoyi.github.io/blog/article/python/spider_for_tumblr/simple_spider_for_tumblr.html" target="_blank" rel="noopener">a simple spider for tumblr</a><br>5、<a href="http://zhuangzuoyi.github.io/blog/article/log/Finger_piano/Finger_piano.html" target="_blank" rel="noopener">电动手敲琴</a><br>6、<a href="http://zhuangzuoyi.github.io/blog/article/STM32/01.html" target="_blank" rel="noopener">使用串口唤醒处于停止模式的STM32</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;很久之前就尝试过用hexo来搭建博客，不过由于当时懂的还太少（github、web等），没有弄出来，后来为了学前端，尝试了一点一点的把博客敲出来（除了博客内容还有html、CSS等），随着web方面的入门，还有我做的博客中web方面的知识也就那些，再继续这样做下去的话，就是
      
    
    </summary>
    
      <category term="blog" scheme="http:://halin.xyz/categories/blog/"/>
    
    
      <category term="博客，文章" scheme="http:://halin.xyz/tags/%E5%8D%9A%E5%AE%A2%EF%BC%8C%E6%96%87%E7%AB%A0/"/>
    
  </entry>
  
</feed>
